import type { Link } from "./bytecode";
import { NomicLabsHardhatPluginError } from "hardhat/plugins";
export declare class HardhatViemError extends NomicLabsHardhatPluginError {
    constructor(message: string, parent?: Error);
}
export declare class UnknownDevelopmentNetworkError extends HardhatViemError {
    constructor();
}
export declare class NetworkNotFoundError extends HardhatViemError {
    constructor(chainId: number);
}
export declare class MultipleMatchingNetworksError extends HardhatViemError {
    constructor(chainId: number);
}
export declare class DefaultWalletClientNotFoundError extends HardhatViemError {
    constructor(networkName: string);
}
export declare class InvalidConfirmationsError extends HardhatViemError {
    constructor();
}
export declare class DeployContractError extends HardhatViemError {
    constructor(txHash: string, blockNumber: bigint);
}
export declare class AmbigousLibraryNameError extends HardhatViemError {
    constructor(contractName: string, libraryName: string, matchingLibraries: string[]);
}
export declare class OverlappingLibraryNamesError extends HardhatViemError {
    constructor(sourceName: string, libraryName: string);
}
export declare class UnnecessaryLibraryLinkError extends HardhatViemError {
    constructor(contractName: string, libraryName: string);
}
export declare class MissingLibraryAddressError extends HardhatViemError {
    constructor(contractName: string, missingLibraries: Array<Pick<Link, "sourceName" | "libraryName">>);
}
//# sourceMappingURL=errors.d.ts.map